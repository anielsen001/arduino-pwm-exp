These are some experiments with PWM and Arduino.

* Basics

Most information is for ATmega328P, but appears to also apply to the 85.
This focuses on the 328P:

The 328P has 3 PWM timers, each with 2 outputs.


* References

- This is pretty basic:
https://www.arduino.cc/en/Tutorial/PWM

- This is detailed but needs some context to understand, refers
to ATmega328P
https://www.arduino.cc/en/Tutorial/SecretsOfArduinoPWM

- Some ATtiny85 discussion can be found here:
http://forum.arduino.cc/index.php?topic=60945.0

- https://arduino-info.wikispaces.com/Arduino-PWM-Frequency

* Boards to work with 

These are the boards available from earlier projects

** Adafruit GEMMA v2 - Miniature wearable electronic platform[ID:1222]

- https://www.adafruit.com/gemma/
- http://www.microchip.com/wwwproducts/en/attiny85

** Adafruit Trinket - Mini Microcontroller - 3.3V Logic (MicroUSB) [ID:1500] 5

- https://www.adafruit.com/product/1500
- http://www.microchip.com/wwwproducts/en/attiny85

** Adafruit Pro Trinket - 3V 12MHz[ID:2010] 

- https://www.adafruit.com/product/2010
- http://www.microchip.com/wwwproducts/en/ATmega328P

* Really Basic Arduino set up
  
** Install and configure the Arduino IDE

 - Download IDE from: https://www.arduino.cc/en/Guide/Linux
 - I did not run the install script, just untarred and ran from that directory

** Install Adafruit board descriptors

 - AdaFruit's instructions:  https://learn.adafruit.com/add-boards-arduino-v164/installing-boards
 - AdaFruit's board description json location: https://adafruit.github.io/arduino-board-index/package_adafruit_index.json

** Set programmer to USBtinyISP

 - In Arduino IDE "Tools -> Programmer -> USBtinyISP"

** Get USB connection to work

#+begin_src shell
$ dmesg 
[879740.767210] usb 1-7: USB disconnect, device number 18
[879807.044447] usb 1-7: new low-speed USB device number 19 using xhci_hcd
[879807.190934] usb 1-7: New USB device found, idVendor=1781, idProduct=0c9f
[879807.190943] usb 1-7: New USB device strings: Mfr=1, Product=2, SerialNumber=0
[879807.190949] usb 1-7: Product: USBtiny
[879807.190954] usb 1-7: Manufacturer: Adafruit
#+end_src

*** change udev rules

These instruction describe how to get adafruit's rules: 
https://learn.adafruit.com/adafruit-arduino-ide-setup/linux-setup

But I found that these rules did not work, the group "dialout" needed
to be changed to "plugdev", from the link here:
https://andijcr.github.io/blog/2014/07/31/notes-on-trinket-on-ubuntu-14.04/

 - these commands update udev with the new rules
#+Begin_src shell
sudo udevadm control --reload-rules
sudo udevadm trigger
#+end_src

After all this, the connection still does not work, but the fading
red light just becomes continuously on and I get these errors:

#+begin_src shell
avrdude: error: usbtiny_send: Connection timed out (expected 128, got -110)
avrdude: verification error, first mismatch at byte 0x0380
         0xff != 0x0e
avrdude: verification error; content mismatch
avrdude: verification error; content mismatch
#+end_src

*** add user to plugdev and dialout groups

I was already in the plugdev group, but added dialout for serial use
later.

#+begin_src shell
sudo usermod -aG dialout <username>
#+end_src

Could be difference between trinket and trinket pro? Probably not, udev
rules appear to be for both.

Tried running with sudo to make sure all the udev stuff was OK, and 
the same type of errors occur (the first mismatch occurs at different
location:
#+begin_src shell
vrdude: error: usbtiny_send: Connection timed out (expected 128, got -110)
avrdude: verification error, first mismatch at byte 0x0100
         0xff != 0x38
avrdude: verification error; content mismatch
avrdude: verification error; content mismatch
#+end_src

Switched back to running as user and now get the exact same error when
running with sudo:
#+begin_src shell
vrdude: error: usbtiny_send: Connection timed out (expected 128, got -110)
avrdude: verification error, first mismatch at byte 0x0100
         0xff != 0x38
avrdude: verification error; content mismatch
avrdude: verification error; content mismatch
#+end_src

** debug usb connection

Tried using avrdude directly to read the board and get different results each time:
#+begin_src
~/sw/arduino/arduino-1.8.5$ ./hardware/tools/avr/bin/avrdude avrdude -C ./hardware/tools/avr/etc/avrdude.conf -c usbtiny -p m328p

avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e950f (probably m328p)

avrdude: safemode: Fuses OK (E:FD, H:D0, L:FF)

avrdude done.  Thank you.

~/sw/arduino/arduino-1.8.5$ ./hardware/tools/avr/bin/avrdude avrdude -C ./hardware/tools/avr/etc/avrdude.conf -c usbtiny -p m328p
avrdude: Error: Could not find USBtiny device (0x1781/0xc9f)

avrdude done.  Thank you.

~/sw/arduino/arduino-1.8.5$ ./hardware/tools/avr/bin/avrdude avrdude -C ./hardware/tools/avr/etc/avrdude.conf -c usbtiny -p m328p

avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e950f (probably m328p)
avrdude: safemode: Verify error - unable to read lfuse properly. Programmer may not be reliable.
avrdude: safemode: To protect your AVR the programming will be aborted

avrdude done.  Thank you.

~sw/arduino/arduino-1.8.5$ ./hardware/tools/avr/bin/avrdude avrdude -C ./hardware/tools/avr/etc/avrdude.conf -c usbtiny -p m328p
avrdude: Error: Could not find USBtiny device (0x1781/0xc9f)

avrdude done.  Thank you.


#+end_src

I can reproduce the chain of errors if I hit the reset button on the 
board. When this happens, the red LED first fades in/out and the goes
steady. When the light is steady, cannot connect to the board with
avrdude.

To find the hex code, turn on verbose in the Arduino IDE "File -> Preferences"
then you can see the build directory. Tar this up and copy somewhere
before you quit the IDE since the build directory is deleted when the IDE
quits. I put it into

#+begin_src shell
~/sw/arduino/build/blink.tar
#+end_src
